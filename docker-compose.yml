services:
  api:
    build:
      context: ./apps/backend
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
    volumes:
      - ./apps/backend:/app
    command: air
    depends_on:
      db:
        condition: service_healthy
    environment:
      DB_HOST: db
      NODE_ENV: development
    restart: always
    networks:
      - chat-network

  # front:
  #   build:
  #     context: ./apps/frontend
  #     dockerfile: Dockerfile
  #   env_file:
  #     - ./apps/frontend/.env
  #   ports:
  #     - "4173:4173"
  #   volumes:
  #     - ./apps/frontend:/app
  #     - /app/node_modules
  #   command: npm run dev
  #   depends_on:
  #     - db
  #   networks:
  #     - chat-network

  db:
    image: postgres:15
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U local || exit 1"]
      interval: 3s
      timeout: 2s
      retries: 10
    container_name: postgres-chat
    ports:
      - "127.0.0.1:5432:5432"
    environment:
      POSTGRES_USER: local
      POSTGRES_PASSWORD: password
    volumes:
      - db-data:/var/lib/postgresql/data
    networks:
      - chat-network

volumes:
  db-data:

networks:
  chat-network:
    driver: bridge
